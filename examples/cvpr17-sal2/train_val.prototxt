name: "VGG_ILSVRC_16_layers"
layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "dum1"
  image_data_param {
    source: "examples/cvpr17-sal/image.txt"
    batch_size: 32
  }
  include {
    phase: TRAIN
  }
  transform_param {
    mean_value: 103.939
    mean_value: 116.779
    mean_value: 123.68
  }
}
layer {
  name: "label"
  type: "ImageData"
  top: "label"
  top: "dum2"
  image_data_param {
    source: "examples/cvpr17-sal/label.txt"
    batch_size: 32
    is_color: false
  }
  include {
    phase: TRAIN
  }
}


layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "dum1"
  image_data_param {
    source: "examples/cvpr17-sal/image_val.txt"
    batch_size: 40
  }
  include {
    phase: TEST
  }
  transform_param {
    mean_value: 103.939
    mean_value: 116.779
    mean_value: 123.68
  }
}
layer {
  name: "label"
  type: "ImageData"
  top: "label"
  top: "dum2"
  image_data_param {
    source: "examples/cvpr17-sal/label_val.txt"
    batch_size: 40
    is_color: false
  }
  include {
    phase: TEST
  }
}


#layer {
#  name: "label_slice"
#  type: "Slice"
#  bottom: "label3"
#  top: "label"
#  top: "label2"
#  top: "label0"
#}


layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bn5_3"
  type: "BatchNorm"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}

layer {
  name: "gen_map"
  type: "Convolution"
  bottom: "conv5_3"
  top: "gen_map"
  param {
    lr_mult: 1 #10000
    decay_mult: 1
  }
  convolution_param {
    num_output: 1
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_term: false
    #bias_filler {
    #  type: "constant"
    #  value: 0
    #}
  }
}

layer {
  name: "gen_map_bn"
  type: "BatchNorm"
  bottom: "gen_map"
  top: "gen_map"
}

layer {
  name: "relu_gen_map"
  type: "ReLU"
  bottom: "gen_map"
  top: "gen_map"
}

layer {
  name: "upscale1"
  type: "Deconvolution"
  bottom: "gen_map"
  top: "upscale1"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  convolution_param {
    num_output: 2
    bias_term: false
    kernel_size: 4
    pad: 1
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}

layer {
  name: "upscale1_norm"
  type: "BatchNorm"
  bottom: "upscale1"
  top: "upscale1"
}

layer {
  name: "relu_upscale1"
  type: "ReLU"
  bottom: "upscale1"
  top: "upscale1"
}



layer {
  name: "conv4_score"
  type: "Convolution"
  bottom: "conv4_3"
  top: "conv4_score"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
      #type: "gaussian" #"msra"
      #std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "conv4_score_norm"
  type: "BatchNorm"
  bottom: "conv4_score"
  top: "conv4_score"
}

layer {
  name: "relu_conv4_score"
  type: "ReLU"
  bottom: "conv4_score"
  top: "conv4_score"
}



layer {
  name: "fuse_upscale1"
  type: "Eltwise"
  bottom: "upscale1"	
  bottom: "conv4_score"
  top: "fuse_upscale1"
  eltwise_param {
    operation: SUM
  }
}


## upscale 2
layer {
  name: "upscale2"
  type: "Deconvolution"
  bottom: "fuse_upscale1"
  top: "upscale2"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  convolution_param {
    num_output: 2
    bias_term: false
    kernel_size: 4
    pad: 1
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}

layer {
  name: "upscale2_norm"
  type: "BatchNorm"
  bottom: "upscale2"
  top: "upscale2"
}

layer {
  name: "relu_upscale2"
  type: "ReLU"
  bottom: "upscale2"
  top: "upscale2"
}



layer {
  name: "conv3_score"
  type: "Convolution"
  bottom: "conv3_3"
  top: "conv3_score"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
      #type: "gaussian" #"msra"
      #std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "conv3_score_norm"
  type: "BatchNorm"
  bottom: "conv3_score"
  top: "conv3_score"
}

layer {
  name: "relu_conv3_score"
  type: "ReLU"
  bottom: "conv3_score"
  top: "conv3_score"
}


layer {
  name: "fuse_upscale2"
  type: "Eltwise"
  bottom: "upscale2"	
  bottom: "conv3_score"
  top: "fuse_upscale2"
  eltwise_param {
    operation: SUM
  }
}
## upscale 3
layer {
  name: "upscale3"
  type: "Deconvolution"
  bottom: "fuse_upscale2"
  top: "upscale3"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  convolution_param {
    num_output: 2
    bias_term: false
    kernel_size: 4
    pad: 1
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}

layer {
  name: "upscale3_norm"
  type: "BatchNorm"
  bottom: "upscale3"
  top: "upscale3"
}

layer {
  name: "relu_upscale3"
  type: "ReLU"
  bottom: "upscale3"
  top: "upscale3"
}



#layer {
#  name: "conv2_score"
#  type: "Convolution"
#  bottom: "conv2_2"
#  top: "conv2_score"
#  param {
#    lr_mult: 10
#    decay_mult: 1
#  }
#  param {
#    lr_mult: 20
#    decay_mult: 0
#  }
#  convolution_param {
#    num_output: 2
#    pad: 1
#    kernel_size: 3
#    weight_filler {
#      type: "msra"
#      #type: "gaussian" #"msra"
#      #std: 0.001
#    }
#    bias_filler {
#      type: "constant"
#      value: 0
#    }
#  }
#}

#layer {
#  name: "conv2_score_norm"
#  type: "BatchNorm"
#  bottom: "conv2_score"
#  top: "conv2_score"
#}

#layer {
#  name: "fuse_upscale3"
#  type: "Eltwise"
#  bottom: "upscale3"	
#  bottom: "conv2_score"
#  top: "fuse_upscale3"
#  eltwise_param {
#    operation: SUM
#  }
#}
#####3
layer {
  name: "upscale4"
  type: "Deconvolution"
  bottom: "upscale3"
  top: "upscale4"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 4
    stride: 2
    pad: 1
    weight_filler {
      type: "bilinear"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  
}


layer {
  name: "loss"
  type: "SoftmaxWithHardBoostrapLoss"
  bottom: "upscale4"
  bottom: "label"
  loss_param {
    beta: 0.95
  }
  include {
    phase: TRAIN
  }
}


#layer {
#  name: "loss"
#  type: "SoftmaxWithLoss"
#  bottom: "upscale4"
#  bottom: "label"
#  include {
#    phase: TEST
#  }
#}

layer {
  name: "predict"
  type: "Softmax"
  bottom: "upscale4"
  top: "predict"
  include {
    phase: TEST
  }
}
layer {
  name: "predice_slice"
  type: "Slice"
  bottom: "predict"
  top: "background"
  top: "foreground"
  include {
    phase: TEST
  }
}
layer {
  name: "silence1"
  type: "Silence"
  bottom: "dum1"
  bottom: "dum2"
}
layer {
  name: "silence2"
  type: "Silence"
  bottom: "background"
  include {
    phase: TEST
  }
}

layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "foreground"
  bottom: "label"
  include {
    phase: TEST
  }
}
