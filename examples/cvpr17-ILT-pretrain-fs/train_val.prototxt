name: "VGG_ILSVRC_16_layers"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }

# mean pixel / channel-wise mean instead of mean image
  transform_param {
    crop_size: 224
    mean_value: 103.939
    mean_value: 116.779
    mean_value: 123.68
    mirror: true
  }
  data_param {
    source: "/home/lijun/Research/DataSet/ILSVRC2014/ILSVRC2014_DET/image/ilsvrc14_train_lmdb"
    batch_size: 32
    backend: LMDB
    multi_label: true
    label_size: 12
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    crop_size: 224
    mean_value: 103.939
    mean_value: 116.779
    mean_value: 123.68
    mirror: false
  }
  data_param {
    source: "/home/lijun/Research/DataSet/ILSVRC2014/ILSVRC2014_DET/image/ilsvrc14_val_lmdb"
    batch_size: 32
    backend: LMDB
    multi_label: true
    label_size: 12
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}

layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}

layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bn_conv5_3"
  type: "BatchNorm"
  bottom: "conv5_3"
  top: "conv5_3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  name: "scale_conv5_3"
  type: "Scale"
  bottom: "conv5_3"
  top: "conv5_3"
  param {
    lr_mult: 100
    decay_mult: 1
  }
  param {
    lr_mult: 200
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
  relu_param {
    negative_slope: 0.01
  }
}
layer {
  name: "conv6"
  type: "Convolution"
  bottom: "conv5_3"
  top: "conv6"
  param {
    lr_mult: 100
    decay_mult: 1
  }
  param {
    lr_mult: 200
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
      #type: "gaussian" #"msra"
      #std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bn_conv6"
  type: "BatchNorm"
  bottom: "conv6"
  top: "conv6"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
layer {
  name: "scale_conv6"
  type: "Scale"
  bottom: "conv6"
  top: "conv6"
  param {
    lr_mult: 100
    decay_mult: 1
  }
  param {
    lr_mult: 200
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "conv6"
  top: "conv6"
  relu_param {
    negative_slope: 0.01
  }
}

layer {
  name: "conv5_3_score"
  type: "Convolution"
  bottom: "conv5_3"
  top: "conv5_3_score"
  param {
    lr_mult: 100 #10000
    decay_mult: 1
  }
  convolution_param {
    num_output: 1
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
    bias_term: false
    #bias_filler {
    #  type: "constant"
    #  value: 0
    #}
  }
}
#
layer {
  name: "bn_conv5_3_score"
  type: "BatchNorm"
  bottom: "conv5_3_score"
  top: "conv5_3_score"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}
#layer {
#  name: "scale_conv5_3_score"
#  type: "Scale"
#  bottom: "conv5_3_score"
#  top: "conv5_3_score"
#  param {
#    lr_mult: 10
#    decay_mult: 1
#  }
#  param {
#    lr_mult: 20
#    decay_mult: 0
#  }
#  scale_param {
#    bias_term: true
#  }
#}
layer {
  name: "sigmoid_conv5_3_score"
  type: "Sigmoid"
  bottom: "conv5_3_score"
  top: "conv5_3_score"
}
layer {
  name: "output_decay"
  type: "OutputDecay"
  bottom: "conv5_3_score"
  top: "conv5_3_score"
  output_decay_param {
    regularization_type: "L1"
    output_decay: 1e-4
  }
}

layer {
  name: "conv6_mask"
  type: "Eltwise"
  bottom: "conv6"
  bottom: "conv5_3_score"
  top: "conv6_mask"
  eltwise_param {
    operation: PROD
    cross_channel: true
  }
}

#layer {
#  name: "pool6_smooth"
#  type: "Pooling"
#  bottom: "conv6_mask"
#  top: "pool6"
#  pooling_param {
#    pool: AVE
#    global_pooling: true
#  }
#}

layer {
  name: "pool6_smooth"
  type: "SmoothPooling"
  bottom: "conv6_mask"
  top: "pool6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  smooth_pooling_param {
    has_smooth_blobs: true
    unique_smooth: false
    fix_smooth: true
    max_value: 0
    z: 1
    smooth_filler {
      type: "constant"
      value: 1
    }
  }
}
#layer {
#  name: "drop6"
#  type: "Dropout"
#  bottom: "pool6"
#  top: "pool6"
#  dropout_param {
#    dropout_ratio: 0.5
#  }
#}


layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "pool6"
  top: "fc7"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 200
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "SigmoidMultiLabelLoss"
  bottom: "fc7"
  bottom: "label"
  top: "loss"
  loss_weight: 200
  loss_param {
    negative_scale: 0.02
  }
  include {
    phase: TRAIN
  }
}

layer {
  name: "test-loss"
  type: "SigmoidMultiLabelLoss"
  bottom: "fc7"
  bottom: "label"
  top: "test_loss"
  top: "prob"
  top: "label_vector"
  loss_weight: 200
  loss_weight: 0
  loss_weight: 0
  loss_param {
    negative_scale: 0.02
  }
  include {
    phase: TEST
  }
}

layer {
  name: "accuracy"
  type: "OverlapAccuracy"
  bottom: "prob"
  bottom: "label_vector"
  top: "precision"
  top: "recall"
  include {
    phase: TEST
  }
}
